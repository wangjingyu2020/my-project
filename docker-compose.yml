version: '3.8'

services:
  # Consul for service discovery
  consul:
    image: hashicorp/consul:latest
    container_name: consul
    restart: always
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    command: "agent -dev -client=0.0.0.0"
    environment:
    - CONSUL_HTTP_TIMEOUT=1000s
    networks:
      - app-network

  # Spring Cloud Gateway
  gateway:
    build: ./my-java-project
    container_name: gateway
    restart: always
    depends_on:
      - consul
      - auth
      - portfolio
    environment:
      - SPRING_APPLICATION_NAME=gateway
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
    ports:
      - "8080:8080"
    networks:
      - app-network

  # auth API Server
  auth:
    build: ./my-php-project
    container_name: auth
    restart: always
    working_dir: /var/www/html
    networks:
      - app-network
    depends_on:
      - consul
      - db
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - APP_KEY=base64:YOUR_APP_KEY
      - DB_CONNECTION=mysql
      - DB_HOST=mysql_db
      - DB_PORT=3306
      - DB_DATABASE=my_database
      - DB_USERNAME=root
      - DB_PASSWORD=123456
      - APP_PORT=8000
      - APP_HOST=auth
      - APP_URL=auth
      - CONSUL_URL=consul:8500
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=null
      - REDIS_DATABASE=0
      - REDIS_CLIENT=predis
      - JWT_SECRET=123456
    ports:
      - "8000:8000"
    command: sh -c "php artisan migrate --force && php artisan db:seed && php artisan serve --host=0.0.0.0 --port=8000"


  # ASP.NET Core Chat Service
  portfolio:
    build: ./my-cs-project
    container_name: portfolio
    restart: always
    depends_on:
      - consul
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8090
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - DB_HOST=mysql_db
      - DB_PORT=3306
      - DB_DATABASE=portfolio
      - DB_USERNAME=root
      - DB_PASSWORD=123456
    ports:
      - "8090:8090"
    networks:
      - app-network
    command: ["dotnet", "my-cs-project.dll"]


  # MySQL Database
  db:
    image: mysql:8.0
    container_name: mysql_db
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 123456
    networks:
      - app-network
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      
  # Redis
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - app-network
    volumes:
      - redis_data:/data
      
  # React Frontend
  web:
    build: ./my-react-project
    container_name: web
    restart: always
    depends_on:
      - gateway
    ports:
      - "3000:80"
    networks:
      - app-network
    volumes:
      - /app/node_modules

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
  redis_data:
